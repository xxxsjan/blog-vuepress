(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{201:function(e,t,n){"use strict";n.r(t);var a=n(7),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"mock模拟数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mock模拟数据"}},[e._v("#")]),e._v(" mock模拟数据")]),e._v(" "),n("p",[e._v("https://www.jianshu.com/p/c5568910e946")]),e._v(" "),n("h2",{attrs:{id:"自动引入"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自动引入"}},[e._v("#")]),e._v(" 自动引入")]),e._v(" "),n("p",[e._v("mock文件夹-index.js")]),e._v(" "),n("p",[e._v("自动遍历引入index以外的js文件")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// 首先引入Mock\nconst Mock = require('mockjs');\n\n// 设置拦截ajax请求的相应时间\nMock.setup({\n    timeout: '200-600'\n});\n\nlet configArray = [];\n\n// 使用webpack的require.context()遍历所有mock文件\nconst files = require.context('.', true, /\\.js$/);\nfiles.keys().forEach((key) => {\n    if (key === './index.js') return;\n    configArray = configArray.concat(files(key).default);\n});\n\n// 注册所有的mock服务\nconfigArray.forEach((item) => {\n    for (let [path, target] of Object.entries(item)) {\n        let protocol = path.split('|');\n        // Mock.mock(url,type,{}|fn)\n        Mock.mock(new RegExp('^' + protocol[1]), protocol[0], target);\n    }\n});\n")])])]),n("p",[e._v("test.js")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("let demoList = [{\n    id: 1,\n    name: 'zs',\n    age: '23',\n    job: '前端工程师'\n}, {\n    id: 2,\n    name: 'ww',\n    age: '24',\n    job: '后端工程师'\n}]\n\nexport default {\n    'get|/parameter/query': option => {\n        return {\n            status: 200,\n            message: 'success',\n            data: demoList\n        };\n    }\n}\n")])])]),n("p",[e._v("main.js引入，或者组件里引入")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("require('./mock');\n")])])]),n("h2",{attrs:{id:"手动引入"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#手动引入"}},[e._v("#")]),e._v(" 手动引入")]),e._v(" "),n("p",[e._v("mockdemo.js")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const Mock = require('mockjs');\nlet demoList = [{\n    id: 1,\n    name: 'zs',\n    age: '23',\n    job: '前端工程师'\n}, {\n    id: 2,\n    name: 'ww',\n    age: '24',\n    job: '后端工程师'\n}]\nexport default {\n    'get|/parameter/query': demoList\n}\nMock.mock('/parameter/query', 'get', {\n    status: 200,\n    message: 'success',\n    data: demoList\n})\n")])])]),n("p",[e._v("页面引入")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("require('./mockdemo.js')\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);